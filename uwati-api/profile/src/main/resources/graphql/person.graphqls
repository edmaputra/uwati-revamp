type Auditable {
  createdBy: String
  createdDateTime: String
  modifiedBy: String
  modifiedDateTime: String
  deleted: Boolean
  deletedBy: String
  deletedDateTime: String
}

type Person {
  id: ID!,
  personId: String,
  name: String,
  email: String,
  type: PersonType,
  phone: String,
  address: [Map],
  metadata: [Map],
  username: String
  audit: Auditable
}

type Query {
  persons(
    page: Int = 0,
    size: Int = 20,
    sort: String = "id",
    asc: Boolean = true,
    search: String
  ): [Person]

  person(id: String): Person
}

input PersonCreateInput {
  name: String!,
  email: String,
  phone: String,
  type: PersonType,
  address: [MapInput],
  metadata: [MapInput],
  username: String!
}

input PersonUpdateInput {
  id: ID!,
  name: String!,
  email: String,
  phone: String,
  address: [MapInput],
  metadata: [MapInput]
}

input PersonDeleteInput {
  id: ID!,
  hardDelete: Boolean
}

type Mutation {

  create(input: PersonCreateInput): Person

  update(updateInput: PersonUpdateInput) : Person

  delete(request: PersonDeleteInput) : String

}

type Map {
  key: String!
  value: String!
}

input MapInput {
  key: String!
  value: String!
}

enum PersonType {
  ADMINISTRATOR
  CASHIER
  DOCTOR
  SUPERUSER
  PHARMACIST
}

